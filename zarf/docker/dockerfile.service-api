# dockerfile.sales-api

# Build the Go Binary
FROM golang:1.15.2 as build_service
ENV CGO_ENABLED 0
ARG VCS_REF

# Create a location in the container for the source code.
# Using the default GOPATH location
RUN mkdir -p /service

# Copy the module files first and then download the dependencies.
# If this doesn't change, we won't need to do this again in future builds.
# COPY go.* /service/
# WORKDIR /service
# RUN go mod download

# Copy the source code into the container.
WORKDIR /service
COPY . .

# Build the service binary. We are doing this last since this will be different
# every time we run through this process.
# Set build variable with RUN command, line 35 of `app/service-api/main.go`
WORKDIR /service/app/service-api
RUN go build -ldflags "-X main.build=${VCS_REF}"

# Run the Go Binary in Alpine.
FROM alpine:3.12
ARG BUILD_DATE
ARG VCS_REF
# COPY --from=build_service-api /service/zarf/keys/. /service/zarf/keys/.
COPY --from=build_service-api /service/private.pem /service/private.pem
# COPY --from=build_service-api /service/app/service-admin/service-admin /service/service-admin
COPY --from=build_service-api /service/app/service-api/service-api /service/service-api
WORKDIR /service
CMD ["./service-api"]

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="service-api" \
      org.opencontainers.image.authors="awe ful <aweful@awews.com>" \
      org.opencontainers.image.source="https://github.com/dapperauteur/go-base-service/app/service-api" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.vendor="iWriteCode"